pspax -u 0
errno = 0; uid = strtol(optarg, NULL, 10); if (uid == 0 && errno != 0) error("invalid value");

add support for RPATH checking with -nL ?

we truncate 64bit types in many places to (unsigned long) ... do we really
care though ?  this would be an issue if:
 - host is 32bit
 - object being analyzed is 64bit
 - object has symbols which is larger than 32bits

scanelf does not check offsets of DT's when scanning PT_DYNAMIC ... if a bogus
ELF had a PHDR of type PT_DYNAMIC which claimed to be of size say 1 and had an
offset just shy of the end of the file, we'll probably crash ...

dumpelf does not do string checking in very very verbose mode.  it assumes the
strings are sane when dumping the sections.  only way around this is to check
everything single byte and print it out a character at a time ... sucks ...

we look at the section named ".text" for TEXTRELs when we should look at the
PT_LOAD program headers which are marked Executable.

we don't handle versioned symbols well.  take an ELF with debugging and do:
	scanelf -s '' elf
notice that glibc symbols generally have version info.  then search for that:
	scanelf -s foo@@ver elf
no hits as all of our symbol comparisons ignore the versioning info.

allow digging into ARM_ATTRIBUTES (.ARM.attributes) sections
	- need info on the section layout
	- figure out how to integrate cleanly (target-independent driller)
	http://sourceware.org/binutils/docs/as/GNU-Object-Attributes.html
